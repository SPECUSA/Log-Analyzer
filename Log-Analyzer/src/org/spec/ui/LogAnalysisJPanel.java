/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.spec.ui;

import InfoBean.InputUserInfo;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Properties;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileFilter;



/**
 *
 * @author ishanp
 */
public class LogAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public String process="";
    public JTextArea jTextArea1=null;
    public LogAnalysisJPanel() {
        initComponents();
        jTextArea1=new JTextArea();
        jlblusername.setVisible(false);
        jlblpassword.setVisible(false);
       jtxtusername.setVisible(false);
       jtxtpassword.setVisible(false);
              
    }

   String genString(String operator,String values){
        String conditionQuery="";
        
        process+="\nOperator in querry--> " +operator + "Condition- " + !(operator.equals("="));
        if(operator.equals("="))
        {
          conditionQuery += operator + "'"+values+"'";  
          int index=values.indexOf(",");
          if(index>=1)
          {
              JOptionPane.showConfirmDialog(null, "Multiple values not allowed with equal sign");
          }
        }
       else{  
             process+="\nIn Condition";
            Scanner sc=new Scanner(values);
            values="";
            sc.useDelimiter(",");
            String t="";
            while(sc.hasNext()){
               t=sc.next();
               if(t.length()>0) values+=t+",";
            }
            values=values.substring(0,values.length()-1);
            System.out.println(values); 
            conditionQuery+=operator +" ('"+ values.replaceAll(",","','")+ "')";
        }
        process+="\nIn genString()-->"+ conditionQuery;
        return conditionQuery;
    }
    private String genLIKE_NOTLIKE_String(String operator, String values, String columnName) {
        List<String> tokens=new ArrayList<String>();
        String like_String="(";
        String temp="";
        System.out.println("Values - "+values);
        if(values.indexOf(",")>=1)
        {
            Scanner sc=new Scanner(values);
            sc.useDelimiter(",");
            while(sc.hasNext())
            {  
               temp=sc.next(); 
               if(temp.length()>0) tokens.add(temp);
            }
            process+="\nArrayList for Like - > " +tokens;
            //like_String += "1=1 ";
            int i=0;
            
            for(String s1 : tokens){
                i++;
                like_String += columnName +" "+ operator + " '%" + s1 + "%'" ;
                if(i<tokens.size()){
                    like_String += " or ";
                }
            }
        }
        else
        {
          like_String+=columnName +" "+operator +" '%"+ values.replaceAll(",","','")+ "%'";
        }
        like_String+=")";
        process+="\nLIKE NOT LIKE String -->>" + like_String;
        return like_String;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JbtnGroupTypeOfReport = new javax.swing.ButtonGroup();
        jbuttongroupviewer = new javax.swing.ButtonGroup();
        btngroupconsultant = new javax.swing.ButtonGroup();
        jbgrouporderby = new javax.swing.ButtonGroup();
        jlblFromDate = new javax.swing.JLabel();
        jlblToDate = new javax.swing.JLabel();
        jlblConsultantIP = new javax.swing.JLabel();
        jtxtConsultantIP = new javax.swing.JTextField();
        jtxtTop = new javax.swing.JTextField();
        jlblTop = new javax.swing.JLabel();
        jlblURLKeyWord = new javax.swing.JLabel();
        jtxtURLKeyWord = new javax.swing.JTextField();
        jlblRemoveKeyWord = new javax.swing.JLabel();
        jtxtRemoveKeyWord = new javax.swing.JTextField();
        jbtnShowReport = new javax.swing.JButton();
        jbtnsavecriteria = new javax.swing.JButton();
        jlblConsultantName = new javax.swing.JLabel();
        jtxtConsultantName = new javax.swing.JTextField();
        jradioSummary = new javax.swing.JRadioButton();
        jradioDetail = new javax.swing.JRadioButton();
        jDateChooserFromDate = new com.toedter.calendar.JDateChooser();
        jDateChooserToDate = new com.toedter.calendar.JDateChooser();
        jComboConsultantIP = new javax.swing.JComboBox();
        jComboConsultantName = new javax.swing.JComboBox();
        jComboURLKeyword = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jComboRemoveURLKeyword = new javax.swing.JComboBox();
        jLabelHH = new javax.swing.JLabel();
        jtxtHHFromDateTime = new javax.swing.JTextField();
        jtxtMMFromDateTime = new javax.swing.JTextField();
        jtxtSSFromDateTime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtHHToDateTime = new javax.swing.JTextField();
        jtxtMMToDateTime = new javax.swing.JTextField();
        jtxtSSToDateTime = new javax.swing.JTextField();
        jBviewip = new javax.swing.JButton();
        jBviewname = new javax.swing.JButton();
        jradiopdf = new javax.swing.JRadioButton();
        jradiojv = new javax.swing.JRadioButton();
        jTextfilepath = new javax.swing.JTextField();
        jlblusername = new javax.swing.JLabel();
        jlblpassword = new javax.swing.JLabel();
        jtxtusername = new javax.swing.JTextField();
        jtxtpassword = new javax.swing.JPasswordField();
        jtxtprogress = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtnbrowse = new javax.swing.JButton();
        jlblRemoveKeyWord1 = new javax.swing.JLabel();
        jradiohits = new javax.swing.JRadioButton();
        jradiokab = new javax.swing.JRadioButton();
        jbtnexit = new javax.swing.JButton();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jlblFromDate.setText("From Date");

        jlblToDate.setText("To Date");

        jlblConsultantIP.setText("Consultant IP");

        jtxtConsultantIP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtConsultantIPFocusLost(evt);
            }
        });
        jtxtConsultantIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtConsultantIPKeyTyped(evt);
            }
        });

        jtxtTop.setText("10");
        jtxtTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxtTopMouseClicked(evt);
            }
        });
        jtxtTop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtTopKeyTyped(evt);
            }
        });

        jlblTop.setText("Top");

        jlblURLKeyWord.setText("URL KeyWord");

        jtxtURLKeyWord.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtURLKeyWordFocusLost(evt);
            }
        });

        jlblRemoveKeyWord.setText("Remove URL KeyWord");

        jtxtRemoveKeyWord.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtRemoveKeyWordFocusLost(evt);
            }
        });

        jbtnShowReport.setText("Show Report");
        jbtnShowReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbtnShowReportMousePressed(evt);
            }
        });
        jbtnShowReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnShowReportActionPerformed(evt);
            }
        });

        jbtnsavecriteria.setText("Save Criteria");
        jbtnsavecriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnsavecriteriaActionPerformed(evt);
            }
        });

        jlblConsultantName.setText("Consultant Name");

        jtxtConsultantName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtConsultantNameFocusLost(evt);
            }
        });
        jtxtConsultantName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtConsultantNameKeyTyped(evt);
            }
        });

        JbtnGroupTypeOfReport.add(jradioSummary);
        jradioSummary.setText("Summary");
        jradioSummary.setSelected(true);

        JbtnGroupTypeOfReport.add(jradioDetail);
        jradioDetail.setText("Detail");

        jComboConsultantIP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "IN", "NOT IN" }));

        jComboConsultantName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "IN", "NOT IN" }));

        jComboURLKeyword.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LIKE" }));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 174, 61));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOG");
        jLabel1.setAlignmentX(5.0F);

        jComboRemoveURLKeyword.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NOT LIKE" }));

        jLabelHH.setText("From Time");

        jtxtHHFromDateTime.setText("HH");
        jtxtHHFromDateTime.setToolTipText("0-23");
        jtxtHHFromDateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtHHFromDateTimeFocusGained(evt);
            }
        });
        jtxtHHFromDateTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtHHFromDateTimeKeyTyped(evt);
            }
        });

        jtxtMMFromDateTime.setText("MM");
        jtxtMMFromDateTime.setToolTipText("0-59");
        jtxtMMFromDateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtMMFromDateTimeFocusGained(evt);
            }
        });
        jtxtMMFromDateTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtMMFromDateTimeKeyTyped(evt);
            }
        });

        jtxtSSFromDateTime.setText("SS");
        jtxtSSFromDateTime.setToolTipText("0-59");
        jtxtSSFromDateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtSSFromDateTimeFocusGained(evt);
            }
        });
        jtxtSSFromDateTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtSSFromDateTimeKeyTyped(evt);
            }
        });

        jLabel2.setText("To Time");

        jtxtHHToDateTime.setText("HH");
        jtxtHHToDateTime.setToolTipText("0-23");
        jtxtHHToDateTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtHHToDateTimeActionPerformed(evt);
            }
        });
        jtxtHHToDateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtHHToDateTimeFocusGained(evt);
            }
        });
        jtxtHHToDateTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtHHToDateTimeKeyTyped(evt);
            }
        });

        jtxtMMToDateTime.setText("MM");
        jtxtMMToDateTime.setToolTipText("0-59");
        jtxtMMToDateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtMMToDateTimeFocusGained(evt);
            }
        });
        jtxtMMToDateTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtMMToDateTimeKeyTyped(evt);
            }
        });

        jtxtSSToDateTime.setText("SS");
        jtxtSSToDateTime.setToolTipText("0-59");
        jtxtSSToDateTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtSSToDateTimeFocusGained(evt);
            }
        });
        jtxtSSToDateTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtSSToDateTimeKeyTyped(evt);
            }
        });

        jBviewip.setText("?");
        jBviewip.setToolTipText("View IP");
        jBviewip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBviewipActionPerformed(evt);
            }
        });

        jBviewname.setText("?");
        jBviewname.setToolTipText("View Consultant name");
        jBviewname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBviewnameActionPerformed(evt);
            }
        });

        jbuttongroupviewer.add(jradiopdf);
        jradiopdf.setText("PDF");
        jradiopdf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jradiopdfMouseClicked(evt);
            }
        });

        jbuttongroupviewer.add(jradiojv);
        jradiojv.setText("Jasper Viewer");
        jradiojv.setSelected(true);
        jradiojv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradiojvActionPerformed(evt);
            }
        });

        jTextfilepath.setEditable(false);
        jTextfilepath.setEnabled(false);

        jlblusername.setText("Username");

        jlblpassword.setText("Password");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/spec/ui/spec-logo.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 149, 217));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ANALYZER ");
        jLabel4.setAlignmentX(5.0F);

        jbtnbrowse.setText("Browse Criteria");
        jbtnbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnbrowseActionPerformed(evt);
            }
        });

        jlblRemoveKeyWord1.setText("Order By");

        jbgrouporderby.add(jradiohits);
        jradiohits.setText("Hits");

        jbgrouporderby.add(jradiokab);
        jradiokab.setText("Kilo Byte");
        jradiokab.setSelected(true);

        jbtnexit.setText("Exit");
        jbtnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jradiojv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jradiopdf)
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlblURLKeyWord, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlblRemoveKeyWord, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlblConsultantName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlblConsultantIP, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelHH, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlblFromDate, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jlblusername)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboConsultantIP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboConsultantName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboURLKeyword, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboRemoveURLKeyword, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jradioSummary)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jradioDetail)
                                                .addGap(18, 18, 18)
                                                .addComponent(jlblRemoveKeyWord1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jradiohits)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jradiokab))
                                            .addComponent(jtxtprogress, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel2)
                                                            .addComponent(jlblToDate))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jDateChooserToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jtxtHHToDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jtxtMMToDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jtxtSSToDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addComponent(jtxtConsultantIP, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jBviewip)))
                                        .addGap(0, 24, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jlblTop)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtxtTop, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jTextfilepath, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                                                .addComponent(jtxtRemoveKeyWord, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jtxtURLKeyWord, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jtxtConsultantName, javax.swing.GroupLayout.Alignment.LEADING)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBviewname)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jlblpassword)
                                .addGap(0, 0, 0)
                                .addComponent(jtxtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtHHFromDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtMMFromDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtSSFromDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jDateChooserFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(347, 347, 347))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnbrowse)
                .addGap(18, 18, 18)
                .addComponent(jbtnsavecriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnShowReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblusername)
                    .addComponent(jlblpassword)
                    .addComponent(jtxtusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtSSFromDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtMMFromDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtHHFromDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jtxtHHToDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtSSToDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtMMToDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelHH))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlblFromDate)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboConsultantIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlblConsultantIP))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtConsultantIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBviewip)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboConsultantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblConsultantName)
                    .addComponent(jBviewname)
                    .addComponent(jtxtConsultantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtURLKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboURLKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblURLKeyWord))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtRemoveKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRemoveURLKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblRemoveKeyWord))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextfilepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jradiopdf)
                    .addComponent(jradiojv))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jradioSummary)
                    .addComponent(jradioDetail)
                    .addComponent(jlblRemoveKeyWord1)
                    .addComponent(jradiohits)
                    .addComponent(jradiokab))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtxtprogress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlblTop)
                        .addComponent(jtxtTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnexit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnsavecriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnShowReport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnShowReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnShowReportActionPerformed
        new Thread() {
        public void run() {
        jbtnShowReport.setEnabled(false);
        process+="\nAction Performed..!!";
        
        InputUserInfo inputs=new InputUserInfo();
        
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        process+="\nSimple Date Format--->>" + sdf.format(jDateChooserFromDate.getDate());
        
        try{
            inputs.setFlag(true);
            inputs.setUsername(jtxtusername.getText().trim());
            inputs.setPassword(jtxtpassword.getText().trim());
            inputs.setFromDate(sdf.format(jDateChooserFromDate.getDate()));
            inputs.setToDate(sdf.format(jDateChooserToDate.getDate()));
            inputs.setFromTime(jtxtHHFromDateTime.getText()+ ":" + jtxtMMFromDateTime.getText() +":" + jtxtSSFromDateTime.getText());
            inputs.setToTime(jtxtHHToDateTime.getText()+ ":" + jtxtMMToDateTime.getText() +":" + jtxtSSToDateTime.getText());
                 
            inputs.setConsultantIp(jtxtConsultantIP.getText());
            inputs.setConsultantIPOperator(jComboConsultantIP.getSelectedItem().toString());
            inputs.setTop(jtxtTop.getText());

            inputs.setConsultantName(jtxtConsultantName.getText());
            inputs.setConsultantNameOperator(jComboConsultantName.getSelectedItem().toString());
            if(jradioSummary.isSelected()){
                inputs.setReportType(jradioSummary.getText());
            }
            else if(jradioDetail.isSelected()){
                inputs.setReportType(jradioDetail.getText());
            }                
            else{
                inputs.setReportType("No Type Selected");
            }
            if(jradiohits.isSelected()){
                inputs.setOrderby("hints");
                inputs.setOrderbyvalue("total_hints");
            }else{
                inputs.setOrderby("bytes");
                inputs.setOrderbyvalue("total_mb");
            }
            inputs.setUrlKeyword(jtxtURLKeyWord.getText());
            inputs.setUrlKeywordOperator(jComboURLKeyword.getSelectedItem().toString());
            inputs.setRemovekeyword(jtxtRemoveKeyWord.getText());
            inputs.setRemovekeywordOperator(jComboRemoveURLKeyword.getSelectedItem().toString());
            if(jradiopdf.isSelected()){
             inputs.setViewerType("PDF");
             inputs.setFilepath(jTextfilepath.getText().trim());
            }else{
                inputs.setViewerType("JASPER");
                inputs.setFilepath("");
            }
        }
        catch(NullPointerException npe)
        {
            JOptionPane.showMessageDialog(null, "Please Enter all the fields..!!");
        }
        //For Consultant IP..!!
        String clientIP_String="";
        if(inputs.getConsultantIp()!=null && !(inputs.getConsultantIp().equals("")))
        {
            
            if(inputs.getConsultantIPOperator().equalsIgnoreCase("LIKE") || inputs.getConsultantIPOperator().equalsIgnoreCase("NOT LIKE"))
            {
                process+="\nOperator LIKE NOT LIKE Selected..!!";
                clientIP_String += genLIKE_NOTLIKE_String(inputs.getConsultantIPOperator(),inputs.getConsultantIp(),"client_ip") ;
            }
            else{
                //clientIP_String += "1=1 and "+"client_ip "+genString(inputs.getConsultantIPOperator(),inputs.getConsultantIp());
                clientIP_String += "client_ip "+genString(inputs.getConsultantIPOperator(),inputs.getConsultantIp());
            }
            clientIP_String+=" and ";
             process+="\nQuery Printed:--->"+clientIP_String;
        }
        //End for Consultant IP..!!
        
         //For Client Name..!!
        String client_nameString="";
        if(inputs.getConsultantName()!=null && !(inputs.getConsultantName().equals("")))
        {
            if(inputs.getConsultantNameOperator().equalsIgnoreCase("LIKE") || inputs.getConsultantNameOperator().equalsIgnoreCase("NOT LIKE"))
            {
                process+="\nOperator LIKE NOT LIKE Selected..!!";
                client_nameString += genLIKE_NOTLIKE_String(inputs.getConsultantNameOperator(),inputs.getConsultantName(),"client_name");
            }
            else{
                //client_nameString += "1=1 and "+"client_name "+genString(inputs.getConsultantNameOperator(),inputs.getConsultantName());
                client_nameString +="client_name "+genString(inputs.getConsultantNameOperator(),inputs.getConsultantName());
            }
            client_nameString+=" and ";
            process+="\nQuery Printed Client Name:--->"+client_nameString;
         }
        //End for Consultant Name..!!
        
        //For URL Keyword..!!
        String url_Keyword="";
        if(inputs.getUrlKeyword()!=null && !(inputs.getUrlKeyword().equals("")))
        {
            if(inputs.getUrlKeywordOperator().equalsIgnoreCase("LIKE") || inputs.getUrlKeywordOperator().equalsIgnoreCase("NOT LIKE"))
            {
                process+="\nOperator LIKE NOT LIKE Selected..!!";
                url_Keyword += genLIKE_NOTLIKE_String(inputs.getUrlKeywordOperator(),inputs.getUrlKeyword(),"url");
            }
            else{
                //url_Keyword += "1=1 and "+"url "+genString(inputs.getUrlKeywordOperator(),inputs.getUrlKeyword());
                url_Keyword +="url "+genString(inputs.getUrlKeywordOperator(),inputs.getUrlKeyword());
            }
            url_Keyword+=" and ";
          process+="\nQuery Printed url :--->"+url_Keyword;
        }
        //End for URL Keyword..!!
        
        //For Remove URL Keyword..!!
        String not_in_url_keyword="";
        if(inputs.getRemovekeyword()!=null && !(inputs.getRemovekeyword().equals("")))
        {
            if(inputs.getRemovekeywordOperator().equalsIgnoreCase("LIKE") || inputs.getRemovekeywordOperator().equalsIgnoreCase("NOT LIKE"))
            {
                process+="\nOperator LIKE NOT LIKE Selected..!!";
                not_in_url_keyword += genLIKE_NOTLIKE_String(inputs.getRemovekeywordOperator(),inputs.getRemovekeyword(),"url");
            }
            else{
                //not_in_url_keyword += "1=1 and "+"url "+genString(inputs.getRemovekeywordOperator(),inputs.getRemovekeyword());
                not_in_url_keyword +="url "+genString(inputs.getRemovekeywordOperator(),inputs.getRemovekeyword());
            }
            not_in_url_keyword+=" and ";
            process+="\nQuery Printed NOT in url :--->"+not_in_url_keyword;
        }
        
        //String full_query ="1=1 and " +clientIP_String+client_nameString+url_Keyword+not_in_url_keyword + " log_date between '" + inputs.getFromDate() + " " + inputs.getFromTime() + "' and '" +inputs.getToDate()+ " " + inputs.getToTime()+"'";
        String full_query ="1=1 and " +clientIP_String+client_nameString+url_Keyword+not_in_url_keyword + " log_date between '" + inputs.getFromDate() +"' and '" +inputs.getToDate()+"'"+" and log_time between '" + inputs.getFromTime()+"' and '" +inputs.getToTime()+"'";

             
        //String full_query ="1=1 and client_name in (select consultant_name from tbl_user_access where access_type = (select usertype from tbl_user_login where username='"+inputs.getUsername()+"' and password='"+inputs.getPassword()+"')) and " +clientIP_String+url_Keyword+not_in_url_keyword + " log_date between '" + inputs.getFromDate() + " " + inputs.getFromTime() + "' and '" +inputs.getToDate()+ " " + inputs.getToTime()+"'";
        process+="\nFull Query Is --->"+ full_query;
        //System.out.println(System.getProperty("java.home"));
        System.out.println(full_query);
                        HashMap hm = new HashMap();
                        hm.put("main_tbl_name","tbl_http_log");
                        hm.put("url_keys",inputs.getUrlKeyword());
                        hm.put("main_from_date",inputs.getFromDate()+" "+inputs.getFromTime());
                        hm.put("main_to_date",inputs.getToDate()+" "+inputs.getToTime());
                        hm.put("main_chart_limit",Integer.parseInt(inputs.getTop()));
                        hm.put("main_where_condition",full_query);
                        hm.put("viewer_type",inputs.getViewerType());
                        hm.put("file_path",inputs.getFilepath());
                        hm.put("report_type",inputs.getReportType());
                        hm.put("order_by_bytes_or_hints",inputs.getOrderby());
                        hm.put("order_by_total_mb_or_total_hints",inputs.getOrderbyvalue());
                        jTextArea1.setText("");
                        //lap.jTextArea1.append(process);
                        Date fdate=new Date(jDateChooserFromDate.getDate().getYear(),jDateChooserFromDate.getDate().getMonth(),jDateChooserFromDate.getDate().getDate());
                        Date tdate=new Date(jDateChooserToDate.getDate().getYear(),jDateChooserToDate.getDate().getMonth(),jDateChooserToDate.getDate().getDate());
                        if(tdate.after(fdate)||tdate.equals(fdate)){
                        //if(inputs.isFlag()){
                        TestReport tr=new TestReport();
                        jtxtprogress.setText("Report generation in progress....");
                        int a=tr.getReport(hm); 
                        if(a==1) jtxtprogress.setText("Report generated");
                        else jtxtprogress.setText("");    
                        jbtnShowReport.setEnabled(true);
                        /*}else{
                          JOptionPane.showMessageDialog(null, "Please enter username and password","Log Analyzer",JOptionPane.INFORMATION_MESSAGE);
                        }*/
                        }else{
                          JOptionPane.showMessageDialog(null, "To date should not be before from date","Log Analyzer",JOptionPane.INFORMATION_MESSAGE);
                        }
         }
     }.start();
     
        
    }//GEN-LAST:event_jbtnShowReportActionPerformed

    private void jtxtConsultantIPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtConsultantIPFocusLost
        if(jComboConsultantIP.getSelectedItem().toString().equalsIgnoreCase("="))
        {
            if(jtxtConsultantIP.getText().indexOf(",")>=1){
                JOptionPane.showConfirmDialog(null, "Cannot enter more than one value with equal", "Warning", JOptionPane.DEFAULT_OPTION);
            }
        }
    }//GEN-LAST:event_jtxtConsultantIPFocusLost

    private void jtxtConsultantNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtConsultantNameFocusLost
        if(jComboConsultantName.getSelectedItem().toString().equalsIgnoreCase("="))
        {
            if(jtxtConsultantName.getText().indexOf(",")>=1){
                JOptionPane.showConfirmDialog(null, "Cannot enter more than one value with equal", "Warning", JOptionPane.DEFAULT_OPTION);
            }
        }
    }//GEN-LAST:event_jtxtConsultantNameFocusLost

    private void jtxtURLKeyWordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtURLKeyWordFocusLost
        if(jComboURLKeyword.getSelectedItem().toString().equalsIgnoreCase("="))
        {
            if(jtxtURLKeyWord.getText().indexOf(",")>=1){
                JOptionPane.showConfirmDialog(null, "Cannot enter more than one value with equal", "Warning", JOptionPane.DEFAULT_OPTION);
            }
        }
    }//GEN-LAST:event_jtxtURLKeyWordFocusLost

    private void jtxtRemoveKeyWordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtRemoveKeyWordFocusLost
        if(jComboRemoveURLKeyword.getSelectedItem().toString().equalsIgnoreCase("="))
        {
            if(jtxtRemoveKeyWord.getText().indexOf(",")>=1){
                JOptionPane.showConfirmDialog(null, "Cannot enter more than one value with equal", "Warning", JOptionPane.DEFAULT_OPTION);
            }
        }
    }//GEN-LAST:event_jtxtRemoveKeyWordFocusLost

    private void jtxtHHFromDateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtHHFromDateTimeFocusGained
        jtxtHHFromDateTime.setText("");
    }//GEN-LAST:event_jtxtHHFromDateTimeFocusGained

    private void jtxtMMFromDateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtMMFromDateTimeFocusGained
        jtxtMMFromDateTime.setText("");
    }//GEN-LAST:event_jtxtMMFromDateTimeFocusGained

    private void jtxtSSFromDateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtSSFromDateTimeFocusGained
        jtxtSSFromDateTime.setText("");
    }//GEN-LAST:event_jtxtSSFromDateTimeFocusGained

    private void jtxtHHToDateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtHHToDateTimeFocusGained
        jtxtHHToDateTime.setText("");
    }//GEN-LAST:event_jtxtHHToDateTimeFocusGained

    private void jtxtMMToDateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtMMToDateTimeFocusGained
        jtxtMMToDateTime.setText("");
    }//GEN-LAST:event_jtxtMMToDateTimeFocusGained

    private void jtxtSSToDateTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtSSToDateTimeFocusGained
        jtxtSSToDateTime.setText("");
    }//GEN-LAST:event_jtxtSSToDateTimeFocusGained

    private void jBviewipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBviewipActionPerformed
        // TODO add your handling code here:
        
        TestReport t=new TestReport();
        t.getHelpReport();
        
    }//GEN-LAST:event_jBviewipActionPerformed

    private void jradiojvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradiojvActionPerformed
        // TODO add your handling code here:
        jTextfilepath.setEnabled(false);
        jTextfilepath.setText("");
       
    }//GEN-LAST:event_jradiojvActionPerformed

    private void jradiopdfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jradiopdfMouseClicked
        try{
        JFileChooser filechooser=new JFileChooser();
        filechooser.setSelectedFile(new File("default.pdf"));
        int n=filechooser.showSaveDialog(this);
        if(n!=JFileChooser.CANCEL_OPTION){
        jTextfilepath.setText(filechooser.getSelectedFile().getAbsolutePath());
        jTextfilepath.setEnabled(true);
        }else{
            jradiojv.setSelected(true);
        }
        }catch(Exception e){
           process+="\n"+e;
        }
    }//GEN-LAST:event_jradiopdfMouseClicked

    private void jtxtTopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxtTopMouseClicked
        jtxtTop.setText("");
    }//GEN-LAST:event_jtxtTopMouseClicked

    private void jtxtConsultantIPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtConsultantIPKeyTyped
        // TODO add your handling code here:
        if((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
            evt.getKeyChar()=='.'||evt.getKeyChar()==','||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))
           {}
        else{evt.consume();}
           
    }//GEN-LAST:event_jtxtConsultantIPKeyTyped

    private void jtxtConsultantNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtConsultantNameKeyTyped
        // TODO add your handling code here:
        if((evt.getKeyChar()>='A'&& evt.getKeyChar()<='Z')||
           (evt.getKeyChar()>='a'&& evt.getKeyChar()<='z')||     
            evt.getKeyChar()==','||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtConsultantNameKeyTyped

    private void jtxtTopKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtTopKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtTop.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtTopKeyTyped

    private void jtxtHHFromDateTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtHHFromDateTimeKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtHHFromDateTime.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtHHFromDateTimeKeyTyped

    private void jtxtMMFromDateTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtMMFromDateTimeKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtMMFromDateTime.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtMMFromDateTimeKeyTyped

    private void jtxtSSFromDateTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtSSFromDateTimeKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtSSFromDateTime.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtSSFromDateTimeKeyTyped

    private void jtxtHHToDateTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtHHToDateTimeKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtHHToDateTime.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtHHToDateTimeKeyTyped

    private void jtxtMMToDateTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtMMToDateTimeKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtMMToDateTime.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtMMToDateTimeKeyTyped

    private void jtxtSSToDateTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtSSToDateTimeKeyTyped
        // TODO add your handling code here:
        if(((evt.getKeyChar()>='0'&& evt.getKeyChar()<='9')||
           (evt.getKeyCode()==evt.VK_DELETE)||
           (evt.getKeyCode()==evt.VK_BACK_SPACE))&&jtxtSSToDateTime.getText().length()<2)
           {}
        else{evt.consume();}
    }//GEN-LAST:event_jtxtSSToDateTimeKeyTyped

    private void jBviewnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBviewnameActionPerformed
        // TODO add your handling code here:
         TestReport t=new TestReport();
        t.getHelpReport();
    }//GEN-LAST:event_jBviewnameActionPerformed

    private void jbtnShowReportMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnShowReportMousePressed
        // TODO add your handling code here:
                System.out.println("Report generation in progress....");
         
    }//GEN-LAST:event_jbtnShowReportMousePressed

    private void jtxtHHToDateTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtHHToDateTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtHHToDateTimeActionPerformed

    private void jbtnsavecriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnsavecriteriaActionPerformed
        // TODO add your handling code here:
        if(jtxtConsultantIP.getText().equals("")&&jtxtConsultantName.getText().equals("")&&jtxtURLKeyWord.getText().equals("")&&jtxtRemoveKeyWord.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please fill criteria to save","Log Analyzer", JOptionPane.INFORMATION_MESSAGE);
        }else{
            try{
                JFileChooser filechooser=new JFileChooser();
                FileFilter ff=new FileFilter() {

                    @Override
                    public boolean accept(File f) {
                        return f.getName().toLowerCase().endsWith(".prop")||f.isDirectory();
                    }

                    @Override
                    public String getDescription() {
                        return "Property files (*.prop)";
                    }
                };
                SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                filechooser.setFileFilter(ff);
                filechooser.setSelectedFile(new File(System.getProperty("user.dir")+"//search//job.prop"));
                Properties p=new Properties();
                p.setProperty("log_date",sdf.format(jDateChooserFromDate.getDate())+"`"+sdf.format(jDateChooserToDate.getDate()));
                p.setProperty("log_time",jtxtHHFromDateTime.getText()+":"+jtxtMMFromDateTime.getText()+":"+jtxtSSFromDateTime.getText()+"`"+jtxtHHToDateTime.getText()+":"+jtxtMMToDateTime.getText()+":"+jtxtSSToDateTime.getText());
                p.setProperty("client_ip",jComboConsultantIP.getSelectedItem().toString()+"`"+jtxtConsultantIP.getText().trim());
                p.setProperty("client_name",jComboConsultantName.getSelectedItem().toString()+"`"+jtxtConsultantName.getText().trim());
                p.setProperty("url_keyword", jComboURLKeyword.getSelectedItem().toString()+"`"+jtxtURLKeyWord.getText().trim());
                p.setProperty("url_remove_keyword",jComboRemoveURLKeyword.getSelectedItem().toString()+"`"+jtxtRemoveKeyWord.getText().trim());
                p.setProperty("top",jtxtTop.getText());
                int n=filechooser.showSaveDialog(this);
                if(n!=JFileChooser.CANCEL_OPTION){
                 String filename=filechooser.getSelectedFile().getAbsoluteFile().toString();
                 if(!filename.endsWith(".prop")) filename+=".prop";
                 if(filechooser.getSelectedFile().exists()){   
                  int i=JOptionPane.showConfirmDialog(null,"File allready exist.Do you want to overwrite ?","Log Analyzer",JOptionPane.INFORMATION_MESSAGE);
                  if(i==JOptionPane.YES_OPTION){
                      p.store(new FileOutputStream(new File(filename)),"JOB-1");
                      JOptionPane.showMessageDialog(null,"File saved","Log Analyzer",JOptionPane.INFORMATION_MESSAGE);
                  }
                 }else{
                 p.store(new FileOutputStream(new File(filename)),"JOB-1");
                 JOptionPane.showMessageDialog(null,"File saved","Log Analyzer",JOptionPane.INFORMATION_MESSAGE);
                 }
                }
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jbtnsavecriteriaActionPerformed

    private void jbtnbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnbrowseActionPerformed
        // TODO add your handling code here:
        try{
           JFileChooser filechooser=new JFileChooser(System.getProperty("user.dir")+"//search");
           FileFilter ff=new FileFilter() {

                    @Override
                    public boolean accept(File f) {
                        return f.getName().toLowerCase().endsWith(".prop");
                    }

                    @Override
                    public String getDescription() {
                        return "Property files (*.prop)";
                    }
                };
           filechooser.setFileFilter(ff);
           int n=filechooser.showOpenDialog(this);
                
           if(n!=JFileChooser.CANCEL_OPTION){
               Properties p=new Properties();
               p.load(new FileInputStream(filechooser.getSelectedFile().getAbsoluteFile()));
               if(p.getProperty("log_date").split("`").length==2){
                   int year=Integer.parseInt(p.getProperty("log_date").split("`")[0].split("-")[0])-1900;
                   int month=Integer.parseInt(p.getProperty("log_date").split("`")[0].split("-")[1])-1;
                   int day=Integer.parseInt(p.getProperty("log_date").split("`")[0].split("-")[2]);
                   jDateChooserFromDate.setDate(new Date(year,month,day));
                   year=Integer.parseInt(p.getProperty("log_date").split("`")[1].split("-")[0])-1900;
                   month=Integer.parseInt(p.getProperty("log_date").split("`")[1].split("-")[1])-1;
                   day=Integer.parseInt(p.getProperty("log_date").split("`")[1].split("-")[2]);
                   jDateChooserToDate.setDate(new Date(year,month,day));
               }
               if(p.getProperty("log_time").split("`").length==2){
                   jtxtHHFromDateTime.setText(p.getProperty("log_time").split("`")[0].split(":")[0]);
                   jtxtMMFromDateTime.setText(p.getProperty("log_time").split("`")[0].split(":")[1]);
                   jtxtSSFromDateTime.setText(p.getProperty("log_time").split("`")[0].split(":")[2]);
                   jtxtHHToDateTime.setText(p.getProperty("log_time").split("`")[1].split(":")[0]);
                   jtxtMMToDateTime.setText(p.getProperty("log_time").split("`")[1].split(":")[1]);
                   jtxtSSToDateTime.setText(p.getProperty("log_time").split("`")[1].split(":")[2]);
               }
               if(p.getProperty("client_ip").split("`").length==2){
               jComboConsultantIP.setSelectedItem(p.getProperty("client_ip").split("`")[0]);
               jtxtConsultantIP.setText(p.getProperty("client_ip").split("`")[1]);
               }
               if(p.getProperty("client_name").split("`").length==2){
               jComboConsultantName.setSelectedItem(p.getProperty("client_name").split("`")[0]);
               jtxtConsultantName.setText(p.getProperty("client_name").split("`")[1]);
               }
               if(p.getProperty("url_keyword").split("`").length==2){
               jComboURLKeyword.setSelectedItem(p.getProperty("url_keyword").split("`")[0]);
               jtxtURLKeyWord.setText(p.getProperty("url_keyword").split("`")[1]);
               }
               if(p.getProperty("url_remove_keyword").split("`").length==2){
               jComboRemoveURLKeyword.setSelectedItem(p.getProperty("url_remove_keyword").split("`")[0]);
               jtxtRemoveKeyWord.setText(p.getProperty("url_remove_keyword").split("`")[1]);
               }
               jtxtTop.setText(p.getProperty("top"));
           }
           
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null,"Invalid file.","Log Analyzer",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e){
            //System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jbtnbrowseActionPerformed

    private void jbtnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnexitActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jbtnexitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup JbtnGroupTypeOfReport;
    private javax.swing.ButtonGroup btngroupconsultant;
    private javax.swing.JButton jBviewip;
    private javax.swing.JButton jBviewname;
    private javax.swing.JComboBox jComboConsultantIP;
    private javax.swing.JComboBox jComboConsultantName;
    private javax.swing.JComboBox jComboRemoveURLKeyword;
    private javax.swing.JComboBox jComboURLKeyword;
    public com.toedter.calendar.JDateChooser jDateChooserFromDate;
    public com.toedter.calendar.JDateChooser jDateChooserToDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelHH;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextfilepath;
    private javax.swing.ButtonGroup jbgrouporderby;
    private javax.swing.JButton jbtnShowReport;
    private javax.swing.JButton jbtnbrowse;
    private javax.swing.JButton jbtnexit;
    private javax.swing.JButton jbtnsavecriteria;
    private javax.swing.ButtonGroup jbuttongroupviewer;
    private javax.swing.JLabel jlblConsultantIP;
    private javax.swing.JLabel jlblConsultantName;
    private javax.swing.JLabel jlblFromDate;
    private javax.swing.JLabel jlblRemoveKeyWord;
    private javax.swing.JLabel jlblRemoveKeyWord1;
    private javax.swing.JLabel jlblToDate;
    private javax.swing.JLabel jlblTop;
    private javax.swing.JLabel jlblURLKeyWord;
    private javax.swing.JLabel jlblpassword;
    private javax.swing.JLabel jlblusername;
    private javax.swing.JRadioButton jradioDetail;
    private javax.swing.JRadioButton jradioSummary;
    private javax.swing.JRadioButton jradiohits;
    private javax.swing.JRadioButton jradiojv;
    private javax.swing.JRadioButton jradiokab;
    private javax.swing.JRadioButton jradiopdf;
    private javax.swing.JTextField jtxtConsultantIP;
    private javax.swing.JTextField jtxtConsultantName;
    private javax.swing.JTextField jtxtHHFromDateTime;
    private javax.swing.JTextField jtxtHHToDateTime;
    private javax.swing.JTextField jtxtMMFromDateTime;
    private javax.swing.JTextField jtxtMMToDateTime;
    private javax.swing.JTextField jtxtRemoveKeyWord;
    private javax.swing.JTextField jtxtSSFromDateTime;
    private javax.swing.JTextField jtxtSSToDateTime;
    private javax.swing.JTextField jtxtTop;
    private javax.swing.JTextField jtxtURLKeyWord;
    private javax.swing.JPasswordField jtxtpassword;
    public javax.swing.JLabel jtxtprogress;
    private javax.swing.JTextField jtxtusername;
    // End of variables declaration//GEN-END:variables

    
}
