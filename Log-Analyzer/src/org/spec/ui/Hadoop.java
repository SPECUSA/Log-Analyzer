/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.spec.ui;


import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author hduser
 */
public class Hadoop extends javax.swing.JFrame {

    /**
     * Creates new form Hadoop
     */
    public static boolean flag=false;
    public Hadoop() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmireport = new javax.swing.JMenuItem();
        jmidashboard = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SPEC Hadoop");
        setResizable(false);

        jMenu1.setText("View");

        jmireport.setText("Report");
        jmireport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmireportActionPerformed(evt);
            }
        });
        jMenu1.add(jmireport);

        jmidashboard.setText("Upload File");
        jmidashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmidashboardActionPerformed(evt);
            }
        });
        jMenu1.add(jmidashboard);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 727, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmireportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmireportActionPerformed
        LogAnalysisJPanel lap=new LogAnalysisJPanel();
        this.setTitle("Log Analyzer - Report");
        this.setContentPane(lap);
        this.getContentPane().setPreferredSize(new Dimension(727, 509));
        this.pack();
    }//GEN-LAST:event_jmireportActionPerformed

    private void jmidashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmidashboardActionPerformed
        HConfigure c=new HConfigure();
        this.setTitle("Log Analyzer - Upload");
        this.setContentPane(c);
        this.getContentPane().setPreferredSize(new Dimension(727, 509));
        this.pack();
    }//GEN-LAST:event_jmidashboardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hadoop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hadoop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hadoop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hadoop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         try{
        Hadoop hframe=new Hadoop();
        List<Image> icons  = new ArrayList();
        icons.add(new ImageIcon(hframe.getClass().getResource("icon.png")).getImage());
        hframe.setIconImages(icons);
        LogAnalysisJPanel lap=new LogAnalysisJPanel();
        hframe.setContentPane(lap);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        hframe.setTitle("Log Analyzer - Report");
        hframe.setLocationRelativeTo(null);
        hframe.setLocation((dim.width-hframe.getSize().width)/3, (dim.height-hframe.getSize().height)/4);
        hframe.getContentPane().setPreferredSize(new Dimension(727, 509));
        hframe.pack();
        hframe.setVisible(true);
        }catch(Exception e){
            //e.printStackTrace();
            JOptionPane.showMessageDialog(null,"Error "+e,"SPEC Hadoop",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jmidashboard;
    private javax.swing.JMenuItem jmireport;
    // End of variables declaration//GEN-END:variables
}
